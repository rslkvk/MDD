/*
 * generated by Xtext
 */
package de.thm.mni.htmlgen.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.thm.mni.htmlgen.services.HTMLGenGrammarAccess;

public class HTMLGenParser extends AbstractContentAssistParser {
	
	@Inject
	private HTMLGenGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.thm.mni.htmlgen.ui.contentassist.antlr.internal.InternalHTMLGenParser createParser() {
		de.thm.mni.htmlgen.ui.contentassist.antlr.internal.InternalHTMLGenParser result = new de.thm.mni.htmlgen.ui.contentassist.antlr.internal.InternalHTMLGenParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getFieldAccess().getAlternatives(), "rule__Field__Alternatives");
					put(grammarAccess.getTextFieldAccess().getAlternatives(), "rule__TextField__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelAccess().getGroup_4(), "rule__Model__Group_4__0");
					put(grammarAccess.getFormAccess().getGroup(), "rule__Form__Group__0");
					put(grammarAccess.getFormAccess().getGroup_9(), "rule__Form__Group_9__0");
					put(grammarAccess.getFieldAccess().getGroup_0(), "rule__Field__Group_0__0");
					put(grammarAccess.getFieldAccess().getGroup_1(), "rule__Field__Group_1__0");
					put(grammarAccess.getTextFieldAccess().getGroup_0(), "rule__TextField__Group_0__0");
					put(grammarAccess.getTextFieldAccess().getGroup_1(), "rule__TextField__Group_1__0");
					put(grammarAccess.getMultilineFieldAccess().getGroup(), "rule__MultilineField__Group__0");
					put(grammarAccess.getModelAccess().getModelAssignment_3(), "rule__Model__ModelAssignment_3");
					put(grammarAccess.getModelAccess().getFormAssignment_4_1(), "rule__Model__FormAssignment_4_1");
					put(grammarAccess.getFormAccess().getNameAssignment_2(), "rule__Form__NameAssignment_2");
					put(grammarAccess.getFormAccess().getDescriptionAssignment_4(), "rule__Form__DescriptionAssignment_4");
					put(grammarAccess.getFormAccess().getTitleAssignment_6(), "rule__Form__TitleAssignment_6");
					put(grammarAccess.getFormAccess().getFormAssignment_8(), "rule__Form__FormAssignment_8");
					put(grammarAccess.getFormAccess().getFormAssignment_9_1(), "rule__Form__FormAssignment_9_1");
					put(grammarAccess.getFieldAccess().getNameAssignment_0_2(), "rule__Field__NameAssignment_0_2");
					put(grammarAccess.getFieldAccess().getLabelAssignment_0_4(), "rule__Field__LabelAssignment_0_4");
					put(grammarAccess.getTextFieldAccess().getNameAssignment_0_3(), "rule__TextField__NameAssignment_0_3");
					put(grammarAccess.getTextFieldAccess().getLabelAssignment_0_5(), "rule__TextField__LabelAssignment_0_5");
					put(grammarAccess.getMultilineFieldAccess().getNameAssignment_3(), "rule__MultilineField__NameAssignment_3");
					put(grammarAccess.getMultilineFieldAccess().getLabelAssignment_5(), "rule__MultilineField__LabelAssignment_5");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.thm.mni.htmlgen.ui.contentassist.antlr.internal.InternalHTMLGenParser typedParser = (de.thm.mni.htmlgen.ui.contentassist.antlr.internal.InternalHTMLGenParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public HTMLGenGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(HTMLGenGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
