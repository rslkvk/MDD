/*
 * generated by Xtext
 */
package de.thm.mni.hochschule.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class HochschuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Hochschule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHochschuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cStudentKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cStudentAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cStudentStudentParserRuleCall_5_0 = (RuleCall)cStudentAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cStudentAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cStudentStudentParserRuleCall_6_1_0 = (RuleCall)cStudentAssignment_6_1.eContents().get(0);
		private final Keyword cFachbereichKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cFachbereichAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cFachbereichFachbereichParserRuleCall_8_0 = (RuleCall)cFachbereichAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cFachbereichAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cFachbereichFachbereichParserRuleCall_9_1_0 = (RuleCall)cFachbereichAssignment_9_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Hochschule:
		//	"Hochschule" "{" "Name" name=STRING "Student" student+=Student ("," student+=Student)* "Fachbereich"
		//	fachbereich+=Fachbereich ("," fachbereich+=Fachbereich)* "}";
		@Override public ParserRule getRule() { return rule; }

		//"Hochschule" "{" "Name" name=STRING "Student" student+=Student ("," student+=Student)* "Fachbereich"
		//fachbereich+=Fachbereich ("," fachbereich+=Fachbereich)* "}"
		public Group getGroup() { return cGroup; }

		//"Hochschule"
		public Keyword getHochschuleKeyword_0() { return cHochschuleKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Name"
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }

		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }

		//"Student"
		public Keyword getStudentKeyword_4() { return cStudentKeyword_4; }

		//student+=Student
		public Assignment getStudentAssignment_5() { return cStudentAssignment_5; }

		//Student
		public RuleCall getStudentStudentParserRuleCall_5_0() { return cStudentStudentParserRuleCall_5_0; }

		//("," student+=Student)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//student+=Student
		public Assignment getStudentAssignment_6_1() { return cStudentAssignment_6_1; }

		//Student
		public RuleCall getStudentStudentParserRuleCall_6_1_0() { return cStudentStudentParserRuleCall_6_1_0; }

		//"Fachbereich"
		public Keyword getFachbereichKeyword_7() { return cFachbereichKeyword_7; }

		//fachbereich+=Fachbereich
		public Assignment getFachbereichAssignment_8() { return cFachbereichAssignment_8; }

		//Fachbereich
		public RuleCall getFachbereichFachbereichParserRuleCall_8_0() { return cFachbereichFachbereichParserRuleCall_8_0; }

		//("," fachbereich+=Fachbereich)*
		public Group getGroup_9() { return cGroup_9; }

		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }

		//fachbereich+=Fachbereich
		public Assignment getFachbereichAssignment_9_1() { return cFachbereichAssignment_9_1; }

		//Fachbereich
		public RuleCall getFachbereichFachbereichParserRuleCall_9_1_0() { return cFachbereichFachbereichParserRuleCall_9_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class FachbereichElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Fachbereich");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cAliasKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAliasAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAliasSTRINGTerminalRuleCall_4_0 = (RuleCall)cAliasAssignment_4.eContents().get(0);
		private final Keyword cStudiengangKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cStudiengangAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cStudiengangStudiengangParserRuleCall_6_0 = (RuleCall)cStudiengangAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cStudiengangAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cStudiengangStudiengangParserRuleCall_7_1_0 = (RuleCall)cStudiengangAssignment_7_1.eContents().get(0);
		private final Keyword cDozentKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDozentAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDozentDozentParserRuleCall_9_0 = (RuleCall)cDozentAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cDozentAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cDozentDozentParserRuleCall_10_1_0 = (RuleCall)cDozentAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cVorlesungKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cVorlesungAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cVorlesungVorlesungCrossReference_11_1_0 = (CrossReference)cVorlesungAssignment_11_1.eContents().get(0);
		private final RuleCall cVorlesungVorlesungIDTerminalRuleCall_11_1_0_1 = (RuleCall)cVorlesungVorlesungCrossReference_11_1_0.eContents().get(1);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final Keyword cCommaKeyword_11_2_0 = (Keyword)cGroup_11_2.eContents().get(0);
		private final Assignment cVorlesungAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final CrossReference cVorlesungVorlesungCrossReference_11_2_1_0 = (CrossReference)cVorlesungAssignment_11_2_1.eContents().get(0);
		private final RuleCall cVorlesungVorlesungIDTerminalRuleCall_11_2_1_0_1 = (RuleCall)cVorlesungVorlesungCrossReference_11_2_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Fachbereich:
		//	"{" "Name" name=STRING "Alias" alias=STRING "Studiengang" studiengang+=Studiengang ("," studiengang+=Studiengang)*
		//	"Dozent" dozent+=Dozent ("," dozent+=Dozent)* ("Vorlesung" vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])*)? "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "Name" name=STRING "Alias" alias=STRING "Studiengang" studiengang+=Studiengang ("," studiengang+=Studiengang)*
		//"Dozent" dozent+=Dozent ("," dozent+=Dozent)* ("Vorlesung" vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"Name"
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//"Alias"
		public Keyword getAliasKeyword_3() { return cAliasKeyword_3; }

		//alias=STRING
		public Assignment getAliasAssignment_4() { return cAliasAssignment_4; }

		//STRING
		public RuleCall getAliasSTRINGTerminalRuleCall_4_0() { return cAliasSTRINGTerminalRuleCall_4_0; }

		//"Studiengang"
		public Keyword getStudiengangKeyword_5() { return cStudiengangKeyword_5; }

		//studiengang+=Studiengang
		public Assignment getStudiengangAssignment_6() { return cStudiengangAssignment_6; }

		//Studiengang
		public RuleCall getStudiengangStudiengangParserRuleCall_6_0() { return cStudiengangStudiengangParserRuleCall_6_0; }

		//("," studiengang+=Studiengang)*
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//studiengang+=Studiengang
		public Assignment getStudiengangAssignment_7_1() { return cStudiengangAssignment_7_1; }

		//Studiengang
		public RuleCall getStudiengangStudiengangParserRuleCall_7_1_0() { return cStudiengangStudiengangParserRuleCall_7_1_0; }

		//"Dozent"
		public Keyword getDozentKeyword_8() { return cDozentKeyword_8; }

		//dozent+=Dozent
		public Assignment getDozentAssignment_9() { return cDozentAssignment_9; }

		//Dozent
		public RuleCall getDozentDozentParserRuleCall_9_0() { return cDozentDozentParserRuleCall_9_0; }

		//("," dozent+=Dozent)*
		public Group getGroup_10() { return cGroup_10; }

		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }

		//dozent+=Dozent
		public Assignment getDozentAssignment_10_1() { return cDozentAssignment_10_1; }

		//Dozent
		public RuleCall getDozentDozentParserRuleCall_10_1_0() { return cDozentDozentParserRuleCall_10_1_0; }

		//("Vorlesung" vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])*)?
		public Group getGroup_11() { return cGroup_11; }

		//"Vorlesung"
		public Keyword getVorlesungKeyword_11_0() { return cVorlesungKeyword_11_0; }

		//vorlesung+=[Vorlesung]
		public Assignment getVorlesungAssignment_11_1() { return cVorlesungAssignment_11_1; }

		//[Vorlesung]
		public CrossReference getVorlesungVorlesungCrossReference_11_1_0() { return cVorlesungVorlesungCrossReference_11_1_0; }

		//ID
		public RuleCall getVorlesungVorlesungIDTerminalRuleCall_11_1_0_1() { return cVorlesungVorlesungIDTerminalRuleCall_11_1_0_1; }

		//("," vorlesung+=[Vorlesung])*
		public Group getGroup_11_2() { return cGroup_11_2; }

		//","
		public Keyword getCommaKeyword_11_2_0() { return cCommaKeyword_11_2_0; }

		//vorlesung+=[Vorlesung]
		public Assignment getVorlesungAssignment_11_2_1() { return cVorlesungAssignment_11_2_1; }

		//[Vorlesung]
		public CrossReference getVorlesungVorlesungCrossReference_11_2_1_0() { return cVorlesungVorlesungCrossReference_11_2_1_0; }

		//ID
		public RuleCall getVorlesungVorlesungIDTerminalRuleCall_11_2_1_0_1() { return cVorlesungVorlesungIDTerminalRuleCall_11_2_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class StudiengangElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Studiengang");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cNCKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNcAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNcSTRINGTerminalRuleCall_4_0 = (RuleCall)cNcAssignment_4.eContents().get(0);
		private final Keyword cStudentKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cStudentAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cStudentStudentCrossReference_6_0 = (CrossReference)cStudentAssignment_6.eContents().get(0);
		private final RuleCall cStudentStudentIDTerminalRuleCall_6_0_1 = (RuleCall)cStudentStudentCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cStudentAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cStudentStudentCrossReference_7_1_0 = (CrossReference)cStudentAssignment_7_1.eContents().get(0);
		private final RuleCall cStudentStudentIDTerminalRuleCall_7_1_0_1 = (RuleCall)cStudentStudentCrossReference_7_1_0.eContents().get(1);
		private final Keyword cVorlesungKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cVorlesungAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cVorlesungVorlesungParserRuleCall_9_0 = (RuleCall)cVorlesungAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cVorlesungAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cVorlesungVorlesungParserRuleCall_10_1_0 = (RuleCall)cVorlesungAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Studiengang:
		//	"{" "Name" name=STRING "NC" nc=STRING "Student" student+=[Student] ("," student+=[Student])* "Vorlesung"
		//	vorlesung+=Vorlesung ("," vorlesung+=Vorlesung)* "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "Name" name=STRING "NC" nc=STRING "Student" student+=[Student] ("," student+=[Student])* "Vorlesung"
		//vorlesung+=Vorlesung ("," vorlesung+=Vorlesung)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"Name"
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//"NC"
		public Keyword getNCKeyword_3() { return cNCKeyword_3; }

		//nc=STRING
		public Assignment getNcAssignment_4() { return cNcAssignment_4; }

		//STRING
		public RuleCall getNcSTRINGTerminalRuleCall_4_0() { return cNcSTRINGTerminalRuleCall_4_0; }

		//"Student"
		public Keyword getStudentKeyword_5() { return cStudentKeyword_5; }

		//student+=[Student]
		public Assignment getStudentAssignment_6() { return cStudentAssignment_6; }

		//[Student]
		public CrossReference getStudentStudentCrossReference_6_0() { return cStudentStudentCrossReference_6_0; }

		//ID
		public RuleCall getStudentStudentIDTerminalRuleCall_6_0_1() { return cStudentStudentIDTerminalRuleCall_6_0_1; }

		//("," student+=[Student])*
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//student+=[Student]
		public Assignment getStudentAssignment_7_1() { return cStudentAssignment_7_1; }

		//[Student]
		public CrossReference getStudentStudentCrossReference_7_1_0() { return cStudentStudentCrossReference_7_1_0; }

		//ID
		public RuleCall getStudentStudentIDTerminalRuleCall_7_1_0_1() { return cStudentStudentIDTerminalRuleCall_7_1_0_1; }

		//"Vorlesung"
		public Keyword getVorlesungKeyword_8() { return cVorlesungKeyword_8; }

		//vorlesung+=Vorlesung
		public Assignment getVorlesungAssignment_9() { return cVorlesungAssignment_9; }

		//Vorlesung
		public RuleCall getVorlesungVorlesungParserRuleCall_9_0() { return cVorlesungVorlesungParserRuleCall_9_0; }

		//("," vorlesung+=Vorlesung)*
		public Group getGroup_10() { return cGroup_10; }

		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }

		//vorlesung+=Vorlesung
		public Assignment getVorlesungAssignment_10_1() { return cVorlesungAssignment_10_1; }

		//Vorlesung
		public RuleCall getVorlesungVorlesungParserRuleCall_10_1_0() { return cVorlesungVorlesungParserRuleCall_10_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class VorlesungElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Vorlesung");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cModulNrKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cModulnrAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModulnrSTRINGTerminalRuleCall_4_0 = (RuleCall)cModulnrAssignment_4.eContents().get(0);
		private final Keyword cBeschreibungKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cBeschreibungAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBeschreibungSTRINGTerminalRuleCall_6_0 = (RuleCall)cBeschreibungAssignment_6.eContents().get(0);
		private final Keyword cCrPKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cCrpAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCrpSTRINGTerminalRuleCall_8_0 = (RuleCall)cCrpAssignment_8.eContents().get(0);
		private final Keyword cDozentKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDozentAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cDozentDozentCrossReference_10_0 = (CrossReference)cDozentAssignment_10.eContents().get(0);
		private final RuleCall cDozentDozentIDTerminalRuleCall_10_0_1 = (RuleCall)cDozentDozentCrossReference_10_0.eContents().get(1);
		private final Keyword cStudentKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cStudentAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cStudentStudentCrossReference_12_0 = (CrossReference)cStudentAssignment_12.eContents().get(0);
		private final RuleCall cStudentStudentIDTerminalRuleCall_12_0_1 = (RuleCall)cStudentStudentCrossReference_12_0.eContents().get(1);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cStudentAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final CrossReference cStudentStudentCrossReference_13_1_0 = (CrossReference)cStudentAssignment_13_1.eContents().get(0);
		private final RuleCall cStudentStudentIDTerminalRuleCall_13_1_0_1 = (RuleCall)cStudentStudentCrossReference_13_1_0.eContents().get(1);
		private final Keyword cTutorKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cTutorAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final CrossReference cTutorStudentCrossReference_15_0 = (CrossReference)cTutorAssignment_15.eContents().get(0);
		private final RuleCall cTutorStudentIDTerminalRuleCall_15_0_1 = (RuleCall)cTutorStudentCrossReference_15_0.eContents().get(1);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cCommaKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cTutorAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final CrossReference cTutorStudentCrossReference_16_1_0 = (CrossReference)cTutorAssignment_16_1.eContents().get(0);
		private final RuleCall cTutorStudentIDTerminalRuleCall_16_1_0_1 = (RuleCall)cTutorStudentCrossReference_16_1_0.eContents().get(1);
		private final Keyword cEvaluationKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cEvaluationAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cEvaluationEvaluationParserRuleCall_18_0 = (RuleCall)cEvaluationAssignment_18.eContents().get(0);
		private final Group cGroup_19 = (Group)cGroup.eContents().get(19);
		private final Keyword cCommaKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Assignment cEvaluationAssignment_19_1 = (Assignment)cGroup_19.eContents().get(1);
		private final RuleCall cEvaluationEvaluationParserRuleCall_19_1_0 = (RuleCall)cEvaluationAssignment_19_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//Vorlesung:
		//	"{" "Name" name=STRING "ModulNr" modulnr=STRING "Beschreibung" beschreibung=STRING "CrP" crp=STRING "Dozent"
		//	dozent=[Dozent] "Student" student+=[Student] ("," student+=[Student])* "Tutor" tutor+=[Student] (","
		//	tutor+=[Student])* "Evaluation" evaluation+=Evaluation ("," evaluation+=Evaluation)* "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "Name" name=STRING "ModulNr" modulnr=STRING "Beschreibung" beschreibung=STRING "CrP" crp=STRING "Dozent"
		//dozent=[Dozent] "Student" student+=[Student] ("," student+=[Student])* "Tutor" tutor+=[Student] ("," tutor+=[Student])*
		//"Evaluation" evaluation+=Evaluation ("," evaluation+=Evaluation)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"Name"
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//"ModulNr"
		public Keyword getModulNrKeyword_3() { return cModulNrKeyword_3; }

		//modulnr=STRING
		public Assignment getModulnrAssignment_4() { return cModulnrAssignment_4; }

		//STRING
		public RuleCall getModulnrSTRINGTerminalRuleCall_4_0() { return cModulnrSTRINGTerminalRuleCall_4_0; }

		//"Beschreibung"
		public Keyword getBeschreibungKeyword_5() { return cBeschreibungKeyword_5; }

		//beschreibung=STRING
		public Assignment getBeschreibungAssignment_6() { return cBeschreibungAssignment_6; }

		//STRING
		public RuleCall getBeschreibungSTRINGTerminalRuleCall_6_0() { return cBeschreibungSTRINGTerminalRuleCall_6_0; }

		//"CrP"
		public Keyword getCrPKeyword_7() { return cCrPKeyword_7; }

		//crp=STRING
		public Assignment getCrpAssignment_8() { return cCrpAssignment_8; }

		//STRING
		public RuleCall getCrpSTRINGTerminalRuleCall_8_0() { return cCrpSTRINGTerminalRuleCall_8_0; }

		//"Dozent"
		public Keyword getDozentKeyword_9() { return cDozentKeyword_9; }

		//dozent=[Dozent]
		public Assignment getDozentAssignment_10() { return cDozentAssignment_10; }

		//[Dozent]
		public CrossReference getDozentDozentCrossReference_10_0() { return cDozentDozentCrossReference_10_0; }

		//ID
		public RuleCall getDozentDozentIDTerminalRuleCall_10_0_1() { return cDozentDozentIDTerminalRuleCall_10_0_1; }

		//"Student"
		public Keyword getStudentKeyword_11() { return cStudentKeyword_11; }

		//student+=[Student]
		public Assignment getStudentAssignment_12() { return cStudentAssignment_12; }

		//[Student]
		public CrossReference getStudentStudentCrossReference_12_0() { return cStudentStudentCrossReference_12_0; }

		//ID
		public RuleCall getStudentStudentIDTerminalRuleCall_12_0_1() { return cStudentStudentIDTerminalRuleCall_12_0_1; }

		//("," student+=[Student])*
		public Group getGroup_13() { return cGroup_13; }

		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }

		//student+=[Student]
		public Assignment getStudentAssignment_13_1() { return cStudentAssignment_13_1; }

		//[Student]
		public CrossReference getStudentStudentCrossReference_13_1_0() { return cStudentStudentCrossReference_13_1_0; }

		//ID
		public RuleCall getStudentStudentIDTerminalRuleCall_13_1_0_1() { return cStudentStudentIDTerminalRuleCall_13_1_0_1; }

		//"Tutor"
		public Keyword getTutorKeyword_14() { return cTutorKeyword_14; }

		//tutor+=[Student]
		public Assignment getTutorAssignment_15() { return cTutorAssignment_15; }

		//[Student]
		public CrossReference getTutorStudentCrossReference_15_0() { return cTutorStudentCrossReference_15_0; }

		//ID
		public RuleCall getTutorStudentIDTerminalRuleCall_15_0_1() { return cTutorStudentIDTerminalRuleCall_15_0_1; }

		//("," tutor+=[Student])*
		public Group getGroup_16() { return cGroup_16; }

		//","
		public Keyword getCommaKeyword_16_0() { return cCommaKeyword_16_0; }

		//tutor+=[Student]
		public Assignment getTutorAssignment_16_1() { return cTutorAssignment_16_1; }

		//[Student]
		public CrossReference getTutorStudentCrossReference_16_1_0() { return cTutorStudentCrossReference_16_1_0; }

		//ID
		public RuleCall getTutorStudentIDTerminalRuleCall_16_1_0_1() { return cTutorStudentIDTerminalRuleCall_16_1_0_1; }

		//"Evaluation"
		public Keyword getEvaluationKeyword_17() { return cEvaluationKeyword_17; }

		//evaluation+=Evaluation
		public Assignment getEvaluationAssignment_18() { return cEvaluationAssignment_18; }

		//Evaluation
		public RuleCall getEvaluationEvaluationParserRuleCall_18_0() { return cEvaluationEvaluationParserRuleCall_18_0; }

		//("," evaluation+=Evaluation)*
		public Group getGroup_19() { return cGroup_19; }

		//","
		public Keyword getCommaKeyword_19_0() { return cCommaKeyword_19_0; }

		//evaluation+=Evaluation
		public Assignment getEvaluationAssignment_19_1() { return cEvaluationAssignment_19_1; }

		//Evaluation
		public RuleCall getEvaluationEvaluationParserRuleCall_19_1_0() { return cEvaluationEvaluationParserRuleCall_19_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}

	public class StudentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Student");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cMatrikelNrKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMatrikelnrAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMatrikelnrSTRINGTerminalRuleCall_2_0 = (RuleCall)cMatrikelnrAssignment_2.eContents().get(0);
		private final Keyword cVornameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVornameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVornameSTRINGTerminalRuleCall_4_0 = (RuleCall)cVornameAssignment_4.eContents().get(0);
		private final Keyword cNachnameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNachnameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNachnameSTRINGTerminalRuleCall_6_0 = (RuleCall)cNachnameAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cVorlesungKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cVorlesungAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cVorlesungVorlesungCrossReference_7_1_0 = (CrossReference)cVorlesungAssignment_7_1.eContents().get(0);
		private final RuleCall cVorlesungVorlesungIDTerminalRuleCall_7_1_0_1 = (RuleCall)cVorlesungVorlesungCrossReference_7_1_0.eContents().get(1);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cVorlesungAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final CrossReference cVorlesungVorlesungCrossReference_7_2_1_0 = (CrossReference)cVorlesungAssignment_7_2_1.eContents().get(0);
		private final RuleCall cVorlesungVorlesungIDTerminalRuleCall_7_2_1_0_1 = (RuleCall)cVorlesungVorlesungCrossReference_7_2_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Student:
		//	"{" "MatrikelNr" matrikelnr=STRING "Vorname" vorname=STRING "Nachname" nachname=STRING ("Vorlesung"
		//	vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])*)? "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "MatrikelNr" matrikelnr=STRING "Vorname" vorname=STRING "Nachname" nachname=STRING ("Vorlesung"
		//vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"MatrikelNr"
		public Keyword getMatrikelNrKeyword_1() { return cMatrikelNrKeyword_1; }

		//matrikelnr=STRING
		public Assignment getMatrikelnrAssignment_2() { return cMatrikelnrAssignment_2; }

		//STRING
		public RuleCall getMatrikelnrSTRINGTerminalRuleCall_2_0() { return cMatrikelnrSTRINGTerminalRuleCall_2_0; }

		//"Vorname"
		public Keyword getVornameKeyword_3() { return cVornameKeyword_3; }

		//vorname=STRING
		public Assignment getVornameAssignment_4() { return cVornameAssignment_4; }

		//STRING
		public RuleCall getVornameSTRINGTerminalRuleCall_4_0() { return cVornameSTRINGTerminalRuleCall_4_0; }

		//"Nachname"
		public Keyword getNachnameKeyword_5() { return cNachnameKeyword_5; }

		//nachname=STRING
		public Assignment getNachnameAssignment_6() { return cNachnameAssignment_6; }

		//STRING
		public RuleCall getNachnameSTRINGTerminalRuleCall_6_0() { return cNachnameSTRINGTerminalRuleCall_6_0; }

		//("Vorlesung" vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])*)?
		public Group getGroup_7() { return cGroup_7; }

		//"Vorlesung"
		public Keyword getVorlesungKeyword_7_0() { return cVorlesungKeyword_7_0; }

		//vorlesung+=[Vorlesung]
		public Assignment getVorlesungAssignment_7_1() { return cVorlesungAssignment_7_1; }

		//[Vorlesung]
		public CrossReference getVorlesungVorlesungCrossReference_7_1_0() { return cVorlesungVorlesungCrossReference_7_1_0; }

		//ID
		public RuleCall getVorlesungVorlesungIDTerminalRuleCall_7_1_0_1() { return cVorlesungVorlesungIDTerminalRuleCall_7_1_0_1; }

		//("," vorlesung+=[Vorlesung])*
		public Group getGroup_7_2() { return cGroup_7_2; }

		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }

		//vorlesung+=[Vorlesung]
		public Assignment getVorlesungAssignment_7_2_1() { return cVorlesungAssignment_7_2_1; }

		//[Vorlesung]
		public CrossReference getVorlesungVorlesungCrossReference_7_2_1_0() { return cVorlesungVorlesungCrossReference_7_2_1_0; }

		//ID
		public RuleCall getVorlesungVorlesungIDTerminalRuleCall_7_2_1_0_1() { return cVorlesungVorlesungIDTerminalRuleCall_7_2_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class DozentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Dozent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cProfessorKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cProfessorParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLehrbeauftragterKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cLehrbeauftragerParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//Dozent:
		//	"Professor" Professor | "Lehrbeauftragter" Lehrbeauftrager;
		@Override public ParserRule getRule() { return rule; }

		//"Professor" Professor | "Lehrbeauftragter" Lehrbeauftrager
		public Alternatives getAlternatives() { return cAlternatives; }

		//"Professor" Professor
		public Group getGroup_0() { return cGroup_0; }

		//"Professor"
		public Keyword getProfessorKeyword_0_0() { return cProfessorKeyword_0_0; }

		//Professor
		public RuleCall getProfessorParserRuleCall_0_1() { return cProfessorParserRuleCall_0_1; }

		//"Lehrbeauftragter" Lehrbeauftrager
		public Group getGroup_1() { return cGroup_1; }

		//"Lehrbeauftragter"
		public Keyword getLehrbeauftragterKeyword_1_0() { return cLehrbeauftragterKeyword_1_0; }

		//Lehrbeauftrager
		public RuleCall getLehrbeauftragerParserRuleCall_1_1() { return cLehrbeauftragerParserRuleCall_1_1; }
	}

	public class ProfessorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Professor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPersonalNrKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPersonalnrAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPersonalnrSTRINGTerminalRuleCall_2_0 = (RuleCall)cPersonalnrAssignment_2.eContents().get(0);
		private final Keyword cVornameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVornameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVornameSTRINGTerminalRuleCall_4_0 = (RuleCall)cVornameAssignment_4.eContents().get(0);
		private final Keyword cNachnameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNachnameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNachnameSTRINGTerminalRuleCall_6_0 = (RuleCall)cNachnameAssignment_6.eContents().get(0);
		private final Keyword cVorlesungKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cVorlesungAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cVorlesungVorlesungCrossReference_8_0 = (CrossReference)cVorlesungAssignment_8.eContents().get(0);
		private final RuleCall cVorlesungVorlesungIDTerminalRuleCall_8_0_1 = (RuleCall)cVorlesungVorlesungCrossReference_8_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cVorlesungAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cVorlesungVorlesungCrossReference_9_1_0 = (CrossReference)cVorlesungAssignment_9_1.eContents().get(0);
		private final RuleCall cVorlesungVorlesungIDTerminalRuleCall_9_1_0_1 = (RuleCall)cVorlesungVorlesungCrossReference_9_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Professor:
		//	"{" "PersonalNr" personalnr=STRING "Vorname" vorname=STRING "Nachname" nachname=STRING "Vorlesung"
		//	vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])* "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "PersonalNr" personalnr=STRING "Vorname" vorname=STRING "Nachname" nachname=STRING "Vorlesung"
		//vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"PersonalNr"
		public Keyword getPersonalNrKeyword_1() { return cPersonalNrKeyword_1; }

		//personalnr=STRING
		public Assignment getPersonalnrAssignment_2() { return cPersonalnrAssignment_2; }

		//STRING
		public RuleCall getPersonalnrSTRINGTerminalRuleCall_2_0() { return cPersonalnrSTRINGTerminalRuleCall_2_0; }

		//"Vorname"
		public Keyword getVornameKeyword_3() { return cVornameKeyword_3; }

		//vorname=STRING
		public Assignment getVornameAssignment_4() { return cVornameAssignment_4; }

		//STRING
		public RuleCall getVornameSTRINGTerminalRuleCall_4_0() { return cVornameSTRINGTerminalRuleCall_4_0; }

		//"Nachname"
		public Keyword getNachnameKeyword_5() { return cNachnameKeyword_5; }

		//nachname=STRING
		public Assignment getNachnameAssignment_6() { return cNachnameAssignment_6; }

		//STRING
		public RuleCall getNachnameSTRINGTerminalRuleCall_6_0() { return cNachnameSTRINGTerminalRuleCall_6_0; }

		//"Vorlesung"
		public Keyword getVorlesungKeyword_7() { return cVorlesungKeyword_7; }

		//vorlesung+=[Vorlesung]
		public Assignment getVorlesungAssignment_8() { return cVorlesungAssignment_8; }

		//[Vorlesung]
		public CrossReference getVorlesungVorlesungCrossReference_8_0() { return cVorlesungVorlesungCrossReference_8_0; }

		//ID
		public RuleCall getVorlesungVorlesungIDTerminalRuleCall_8_0_1() { return cVorlesungVorlesungIDTerminalRuleCall_8_0_1; }

		//("," vorlesung+=[Vorlesung])*
		public Group getGroup_9() { return cGroup_9; }

		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }

		//vorlesung+=[Vorlesung]
		public Assignment getVorlesungAssignment_9_1() { return cVorlesungAssignment_9_1; }

		//[Vorlesung]
		public CrossReference getVorlesungVorlesungCrossReference_9_1_0() { return cVorlesungVorlesungCrossReference_9_1_0; }

		//ID
		public RuleCall getVorlesungVorlesungIDTerminalRuleCall_9_1_0_1() { return cVorlesungVorlesungIDTerminalRuleCall_9_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class LehrbeauftragerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Lehrbeauftrager");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPersonalNrKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPersonalnrAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPersonalnrSTRINGTerminalRuleCall_2_0 = (RuleCall)cPersonalnrAssignment_2.eContents().get(0);
		private final Keyword cVornameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVornameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVornameSTRINGTerminalRuleCall_4_0 = (RuleCall)cVornameAssignment_4.eContents().get(0);
		private final Keyword cNachnameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNachnameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNachnameSTRINGTerminalRuleCall_6_0 = (RuleCall)cNachnameAssignment_6.eContents().get(0);
		private final Keyword cVorlesungKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cVorlesungAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cVorlesungVorlesungCrossReference_8_0 = (CrossReference)cVorlesungAssignment_8.eContents().get(0);
		private final RuleCall cVorlesungVorlesungIDTerminalRuleCall_8_0_1 = (RuleCall)cVorlesungVorlesungCrossReference_8_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cVorlesungAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cVorlesungVorlesungCrossReference_9_1_0 = (CrossReference)cVorlesungAssignment_9_1.eContents().get(0);
		private final RuleCall cVorlesungVorlesungIDTerminalRuleCall_9_1_0_1 = (RuleCall)cVorlesungVorlesungCrossReference_9_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Lehrbeauftrager:
		//	"{" "PersonalNr" personalnr=STRING "Vorname" vorname=STRING "Nachname" nachname=STRING "Vorlesung"
		//	vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])* "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "PersonalNr" personalnr=STRING "Vorname" vorname=STRING "Nachname" nachname=STRING "Vorlesung"
		//vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"PersonalNr"
		public Keyword getPersonalNrKeyword_1() { return cPersonalNrKeyword_1; }

		//personalnr=STRING
		public Assignment getPersonalnrAssignment_2() { return cPersonalnrAssignment_2; }

		//STRING
		public RuleCall getPersonalnrSTRINGTerminalRuleCall_2_0() { return cPersonalnrSTRINGTerminalRuleCall_2_0; }

		//"Vorname"
		public Keyword getVornameKeyword_3() { return cVornameKeyword_3; }

		//vorname=STRING
		public Assignment getVornameAssignment_4() { return cVornameAssignment_4; }

		//STRING
		public RuleCall getVornameSTRINGTerminalRuleCall_4_0() { return cVornameSTRINGTerminalRuleCall_4_0; }

		//"Nachname"
		public Keyword getNachnameKeyword_5() { return cNachnameKeyword_5; }

		//nachname=STRING
		public Assignment getNachnameAssignment_6() { return cNachnameAssignment_6; }

		//STRING
		public RuleCall getNachnameSTRINGTerminalRuleCall_6_0() { return cNachnameSTRINGTerminalRuleCall_6_0; }

		//"Vorlesung"
		public Keyword getVorlesungKeyword_7() { return cVorlesungKeyword_7; }

		//vorlesung+=[Vorlesung]
		public Assignment getVorlesungAssignment_8() { return cVorlesungAssignment_8; }

		//[Vorlesung]
		public CrossReference getVorlesungVorlesungCrossReference_8_0() { return cVorlesungVorlesungCrossReference_8_0; }

		//ID
		public RuleCall getVorlesungVorlesungIDTerminalRuleCall_8_0_1() { return cVorlesungVorlesungIDTerminalRuleCall_8_0_1; }

		//("," vorlesung+=[Vorlesung])*
		public Group getGroup_9() { return cGroup_9; }

		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }

		//vorlesung+=[Vorlesung]
		public Assignment getVorlesungAssignment_9_1() { return cVorlesungAssignment_9_1; }

		//[Vorlesung]
		public CrossReference getVorlesungVorlesungCrossReference_9_1_0() { return cVorlesungVorlesungCrossReference_9_1_0; }

		//ID
		public RuleCall getVorlesungVorlesungIDTerminalRuleCall_9_1_0_1() { return cVorlesungVorlesungIDTerminalRuleCall_9_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class EvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Evaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cGesamtnoteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cGesamtnoteAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cGesamtnoteINTTerminalRuleCall_2_0 = (RuleCall)cGesamtnoteAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Evaluation:
		//	"{" "Gesamtnote" gesamtnote=INT "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "Gesamtnote" gesamtnote=INT "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"Gesamtnote"
		public Keyword getGesamtnoteKeyword_1() { return cGesamtnoteKeyword_1; }

		//gesamtnote=INT
		public Assignment getGesamtnoteAssignment_2() { return cGesamtnoteAssignment_2; }

		//INT
		public RuleCall getGesamtnoteINTTerminalRuleCall_2_0() { return cGesamtnoteINTTerminalRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	
	
	private final HochschuleElements pHochschule;
	private final FachbereichElements pFachbereich;
	private final StudiengangElements pStudiengang;
	private final VorlesungElements pVorlesung;
	private final StudentElements pStudent;
	private final DozentElements pDozent;
	private final ProfessorElements pProfessor;
	private final LehrbeauftragerElements pLehrbeauftrager;
	private final EvaluationElements pEvaluation;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pHochschule = new HochschuleElements();
		this.pFachbereich = new FachbereichElements();
		this.pStudiengang = new StudiengangElements();
		this.pVorlesung = new VorlesungElements();
		this.pStudent = new StudentElements();
		this.pDozent = new DozentElements();
		this.pProfessor = new ProfessorElements();
		this.pLehrbeauftrager = new LehrbeauftragerElements();
		this.pEvaluation = new EvaluationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.thm.mni.hochschule.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Hochschule:
	//	"Hochschule" "{" "Name" name=STRING "Student" student+=Student ("," student+=Student)* "Fachbereich"
	//	fachbereich+=Fachbereich ("," fachbereich+=Fachbereich)* "}";
	public HochschuleElements getHochschuleAccess() {
		return pHochschule;
	}
	
	public ParserRule getHochschuleRule() {
		return getHochschuleAccess().getRule();
	}

	//Fachbereich:
	//	"{" "Name" name=STRING "Alias" alias=STRING "Studiengang" studiengang+=Studiengang ("," studiengang+=Studiengang)*
	//	"Dozent" dozent+=Dozent ("," dozent+=Dozent)* ("Vorlesung" vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])*)? "}";
	public FachbereichElements getFachbereichAccess() {
		return pFachbereich;
	}
	
	public ParserRule getFachbereichRule() {
		return getFachbereichAccess().getRule();
	}

	//Studiengang:
	//	"{" "Name" name=STRING "NC" nc=STRING "Student" student+=[Student] ("," student+=[Student])* "Vorlesung"
	//	vorlesung+=Vorlesung ("," vorlesung+=Vorlesung)* "}";
	public StudiengangElements getStudiengangAccess() {
		return pStudiengang;
	}
	
	public ParserRule getStudiengangRule() {
		return getStudiengangAccess().getRule();
	}

	//Vorlesung:
	//	"{" "Name" name=STRING "ModulNr" modulnr=STRING "Beschreibung" beschreibung=STRING "CrP" crp=STRING "Dozent"
	//	dozent=[Dozent] "Student" student+=[Student] ("," student+=[Student])* "Tutor" tutor+=[Student] (","
	//	tutor+=[Student])* "Evaluation" evaluation+=Evaluation ("," evaluation+=Evaluation)* "}";
	public VorlesungElements getVorlesungAccess() {
		return pVorlesung;
	}
	
	public ParserRule getVorlesungRule() {
		return getVorlesungAccess().getRule();
	}

	//Student:
	//	"{" "MatrikelNr" matrikelnr=STRING "Vorname" vorname=STRING "Nachname" nachname=STRING ("Vorlesung"
	//	vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])*)? "}";
	public StudentElements getStudentAccess() {
		return pStudent;
	}
	
	public ParserRule getStudentRule() {
		return getStudentAccess().getRule();
	}

	//Dozent:
	//	"Professor" Professor | "Lehrbeauftragter" Lehrbeauftrager;
	public DozentElements getDozentAccess() {
		return pDozent;
	}
	
	public ParserRule getDozentRule() {
		return getDozentAccess().getRule();
	}

	//Professor:
	//	"{" "PersonalNr" personalnr=STRING "Vorname" vorname=STRING "Nachname" nachname=STRING "Vorlesung"
	//	vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])* "}";
	public ProfessorElements getProfessorAccess() {
		return pProfessor;
	}
	
	public ParserRule getProfessorRule() {
		return getProfessorAccess().getRule();
	}

	//Lehrbeauftrager:
	//	"{" "PersonalNr" personalnr=STRING "Vorname" vorname=STRING "Nachname" nachname=STRING "Vorlesung"
	//	vorlesung+=[Vorlesung] ("," vorlesung+=[Vorlesung])* "}";
	public LehrbeauftragerElements getLehrbeauftragerAccess() {
		return pLehrbeauftrager;
	}
	
	public ParserRule getLehrbeauftragerRule() {
		return getLehrbeauftragerAccess().getRule();
	}

	//Evaluation:
	//	"{" "Gesamtnote" gesamtnote=INT "}";
	public EvaluationElements getEvaluationAccess() {
		return pEvaluation;
	}
	
	public ParserRule getEvaluationRule() {
		return getEvaluationAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
