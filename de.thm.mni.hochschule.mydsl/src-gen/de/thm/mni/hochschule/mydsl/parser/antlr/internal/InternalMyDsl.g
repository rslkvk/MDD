/*
 * generated by Xtext
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.thm.mni.hochschule.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.thm.mni.hochschule.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.thm.mni.hochschule.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Hochschule";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleHochschule
entryRuleHochschule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHochschuleRule()); }
	 iv_ruleHochschule=ruleHochschule 
	 { $current=$iv_ruleHochschule.current; } 
	 EOF 
;

// Rule Hochschule
ruleHochschule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Hochschule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHochschuleAccess().getHochschuleKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHochschuleAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='Name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHochschuleAccess().getNameKeyword_2());
    }
(
(
		lv_name_3_0=RULE_STRING
		{
			newLeafNode(lv_name_3_0, grammarAccess.getHochschuleAccess().getNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHochschuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='Student' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHochschuleAccess().getStudentKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHochschuleAccess().getStudentStudentParserRuleCall_5_0()); 
	    }
		lv_student_5_0=ruleStudent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHochschuleRule());
	        }
       		add(
       			$current, 
       			"student",
        		lv_student_5_0, 
        		"Student");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHochschuleAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHochschuleAccess().getStudentStudentParserRuleCall_6_1_0()); 
	    }
		lv_student_7_0=ruleStudent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHochschuleRule());
	        }
       		add(
       			$current, 
       			"student",
        		lv_student_7_0, 
        		"Student");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='Fachbereich' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getHochschuleAccess().getFachbereichKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHochschuleAccess().getFachbereichFachbereichParserRuleCall_8_0()); 
	    }
		lv_fachbereich_9_0=ruleFachbereich		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHochschuleRule());
	        }
       		add(
       			$current, 
       			"fachbereich",
        		lv_fachbereich_9_0, 
        		"Fachbereich");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getHochschuleAccess().getCommaKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHochschuleAccess().getFachbereichFachbereichParserRuleCall_9_1_0()); 
	    }
		lv_fachbereich_11_0=ruleFachbereich		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHochschuleRule());
	        }
       		add(
       			$current, 
       			"fachbereich",
        		lv_fachbereich_11_0, 
        		"Fachbereich");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getHochschuleAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleFachbereich
entryRuleFachbereich returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFachbereichRule()); }
	 iv_ruleFachbereich=ruleFachbereich 
	 { $current=$iv_ruleFachbereich.current; } 
	 EOF 
;

// Rule Fachbereich
ruleFachbereich returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFachbereichAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='Name' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFachbereichAccess().getNameKeyword_1());
    }
(
(
		lv_name_2_0=RULE_STRING
		{
			newLeafNode(lv_name_2_0, grammarAccess.getFachbereichAccess().getNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFachbereichRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='Alias' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFachbereichAccess().getAliasKeyword_3());
    }
(
(
		lv_alias_4_0=RULE_STRING
		{
			newLeafNode(lv_alias_4_0, grammarAccess.getFachbereichAccess().getAliasSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFachbereichRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alias",
        		lv_alias_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='Studiengang' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFachbereichAccess().getStudiengangKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFachbereichAccess().getStudiengangStudiengangParserRuleCall_6_0()); 
	    }
		lv_studiengang_6_0=ruleStudiengang		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFachbereichRule());
	        }
       		add(
       			$current, 
       			"studiengang",
        		lv_studiengang_6_0, 
        		"Studiengang");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFachbereichAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFachbereichAccess().getStudiengangStudiengangParserRuleCall_7_1_0()); 
	    }
		lv_studiengang_8_0=ruleStudiengang		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFachbereichRule());
	        }
       		add(
       			$current, 
       			"studiengang",
        		lv_studiengang_8_0, 
        		"Studiengang");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='Dozent' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFachbereichAccess().getDozentKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFachbereichAccess().getDozentDozentParserRuleCall_9_0()); 
	    }
		lv_dozent_10_0=ruleDozent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFachbereichRule());
	        }
       		add(
       			$current, 
       			"dozent",
        		lv_dozent_10_0, 
        		"Dozent");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFachbereichAccess().getCommaKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFachbereichAccess().getDozentDozentParserRuleCall_10_1_0()); 
	    }
		lv_dozent_12_0=ruleDozent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFachbereichRule());
	        }
       		add(
       			$current, 
       			"dozent",
        		lv_dozent_12_0, 
        		"Dozent");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_13='Vorlesung' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFachbereichAccess().getVorlesungKeyword_11_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFachbereichRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getFachbereichAccess().getVorlesungVorlesungCrossReference_11_1_0()); 
	}

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFachbereichAccess().getCommaKeyword_11_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFachbereichRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getFachbereichAccess().getVorlesungVorlesungCrossReference_11_2_1_0()); 
	}

)
))*)?	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFachbereichAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleStudiengang
entryRuleStudiengang returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStudiengangRule()); }
	 iv_ruleStudiengang=ruleStudiengang 
	 { $current=$iv_ruleStudiengang.current; } 
	 EOF 
;

// Rule Studiengang
ruleStudiengang returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStudiengangAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='Name' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStudiengangAccess().getNameKeyword_1());
    }
(
(
		lv_name_2_0=RULE_STRING
		{
			newLeafNode(lv_name_2_0, grammarAccess.getStudiengangAccess().getNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudiengangRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='NC' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStudiengangAccess().getNCKeyword_3());
    }
(
(
		lv_nc_4_0=RULE_STRING
		{
			newLeafNode(lv_nc_4_0, grammarAccess.getStudiengangAccess().getNcSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudiengangRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nc",
        		lv_nc_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='Student' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStudiengangAccess().getStudentKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudiengangRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getStudiengangAccess().getStudentStudentCrossReference_6_0()); 
	}

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStudiengangAccess().getCommaKeyword_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudiengangRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getStudiengangAccess().getStudentStudentCrossReference_7_1_0()); 
	}

)
))*	otherlv_9='Vorlesung' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStudiengangAccess().getVorlesungKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStudiengangAccess().getVorlesungVorlesungParserRuleCall_9_0()); 
	    }
		lv_vorlesung_10_0=ruleVorlesung		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStudiengangRule());
	        }
       		add(
       			$current, 
       			"vorlesung",
        		lv_vorlesung_10_0, 
        		"Vorlesung");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStudiengangAccess().getCommaKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStudiengangAccess().getVorlesungVorlesungParserRuleCall_10_1_0()); 
	    }
		lv_vorlesung_12_0=ruleVorlesung		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStudiengangRule());
	        }
       		add(
       			$current, 
       			"vorlesung",
        		lv_vorlesung_12_0, 
        		"Vorlesung");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStudiengangAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleVorlesung
entryRuleVorlesung returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVorlesungRule()); }
	 iv_ruleVorlesung=ruleVorlesung 
	 { $current=$iv_ruleVorlesung.current; } 
	 EOF 
;

// Rule Vorlesung
ruleVorlesung returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVorlesungAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='Name' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVorlesungAccess().getNameKeyword_1());
    }
(
(
		lv_name_2_0=RULE_STRING
		{
			newLeafNode(lv_name_2_0, grammarAccess.getVorlesungAccess().getNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorlesungRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='ModulNr' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVorlesungAccess().getModulNrKeyword_3());
    }
(
(
		lv_modulnr_4_0=RULE_STRING
		{
			newLeafNode(lv_modulnr_4_0, grammarAccess.getVorlesungAccess().getModulnrSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorlesungRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"modulnr",
        		lv_modulnr_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='Beschreibung' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVorlesungAccess().getBeschreibungKeyword_5());
    }
(
(
		lv_beschreibung_6_0=RULE_STRING
		{
			newLeafNode(lv_beschreibung_6_0, grammarAccess.getVorlesungAccess().getBeschreibungSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorlesungRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"beschreibung",
        		lv_beschreibung_6_0, 
        		"STRING");
	    }

)
)	otherlv_7='CrP' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVorlesungAccess().getCrPKeyword_7());
    }
(
(
		lv_crp_8_0=RULE_STRING
		{
			newLeafNode(lv_crp_8_0, grammarAccess.getVorlesungAccess().getCrpSTRINGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorlesungRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"crp",
        		lv_crp_8_0, 
        		"STRING");
	    }

)
)	otherlv_9='Dozent' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVorlesungAccess().getDozentKeyword_9());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorlesungRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getVorlesungAccess().getDozentDozentCrossReference_10_0()); 
	}

)
)	otherlv_11='Student' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getVorlesungAccess().getStudentKeyword_11());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorlesungRule());
	        }
        }
	otherlv_12=RULE_ID
	{
		newLeafNode(otherlv_12, grammarAccess.getVorlesungAccess().getStudentStudentCrossReference_12_0()); 
	}

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getVorlesungAccess().getCommaKeyword_13_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorlesungRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getVorlesungAccess().getStudentStudentCrossReference_13_1_0()); 
	}

)
))*	otherlv_15='Tutor' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getVorlesungAccess().getTutorKeyword_14());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorlesungRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getVorlesungAccess().getTutorStudentCrossReference_15_0()); 
	}

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getVorlesungAccess().getCommaKeyword_16_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorlesungRule());
	        }
        }
	otherlv_18=RULE_ID
	{
		newLeafNode(otherlv_18, grammarAccess.getVorlesungAccess().getTutorStudentCrossReference_16_1_0()); 
	}

)
))*	otherlv_19='Evaluation' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getVorlesungAccess().getEvaluationKeyword_17());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVorlesungAccess().getEvaluationEvaluationParserRuleCall_18_0()); 
	    }
		lv_evaluation_20_0=ruleEvaluation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVorlesungRule());
	        }
       		add(
       			$current, 
       			"evaluation",
        		lv_evaluation_20_0, 
        		"Evaluation");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getVorlesungAccess().getCommaKeyword_19_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVorlesungAccess().getEvaluationEvaluationParserRuleCall_19_1_0()); 
	    }
		lv_evaluation_22_0=ruleEvaluation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVorlesungRule());
	        }
       		add(
       			$current, 
       			"evaluation",
        		lv_evaluation_22_0, 
        		"Evaluation");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getVorlesungAccess().getRightCurlyBracketKeyword_20());
    }
)
;





// Entry rule entryRuleStudent
entryRuleStudent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStudentRule()); }
	 iv_ruleStudent=ruleStudent 
	 { $current=$iv_ruleStudent.current; } 
	 EOF 
;

// Rule Student
ruleStudent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStudentAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='MatrikelNr' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStudentAccess().getMatrikelNrKeyword_1());
    }
(
(
		lv_matrikelnr_2_0=RULE_STRING
		{
			newLeafNode(lv_matrikelnr_2_0, grammarAccess.getStudentAccess().getMatrikelnrSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"matrikelnr",
        		lv_matrikelnr_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='Vorname' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStudentAccess().getVornameKeyword_3());
    }
(
(
		lv_vorname_4_0=RULE_STRING
		{
			newLeafNode(lv_vorname_4_0, grammarAccess.getStudentAccess().getVornameSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"vorname",
        		lv_vorname_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='Nachname' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStudentAccess().getNachnameKeyword_5());
    }
(
(
		lv_nachname_6_0=RULE_STRING
		{
			newLeafNode(lv_nachname_6_0, grammarAccess.getStudentAccess().getNachnameSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nachname",
        		lv_nachname_6_0, 
        		"STRING");
	    }

)
)(	otherlv_7='Vorlesung' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStudentAccess().getVorlesungKeyword_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudentRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getStudentAccess().getVorlesungVorlesungCrossReference_7_1_0()); 
	}

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStudentAccess().getCommaKeyword_7_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudentRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getStudentAccess().getVorlesungVorlesungCrossReference_7_2_1_0()); 
	}

)
))*)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStudentAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleDozent
entryRuleDozent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDozentRule()); }
	 iv_ruleDozent=ruleDozent 
	 { $current=$iv_ruleDozent.current; } 
	 EOF 
;

// Rule Dozent
ruleDozent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='Professor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDozentAccess().getProfessorKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getDozentAccess().getProfessorParserRuleCall_0_1()); 
    }
    this_Professor_1=ruleProfessor
    { 
        $current = $this_Professor_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_2='Lehrbeauftragter' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDozentAccess().getLehrbeauftragterKeyword_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getDozentAccess().getLehrbeauftragerParserRuleCall_1_1()); 
    }
    this_Lehrbeauftrager_3=ruleLehrbeauftrager
    { 
        $current = $this_Lehrbeauftrager_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleProfessor
entryRuleProfessor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProfessorRule()); }
	 iv_ruleProfessor=ruleProfessor 
	 { $current=$iv_ruleProfessor.current; } 
	 EOF 
;

// Rule Professor
ruleProfessor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProfessorAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='PersonalNr' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProfessorAccess().getPersonalNrKeyword_1());
    }
(
(
		lv_personalnr_2_0=RULE_STRING
		{
			newLeafNode(lv_personalnr_2_0, grammarAccess.getProfessorAccess().getPersonalnrSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProfessorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"personalnr",
        		lv_personalnr_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='Vorname' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProfessorAccess().getVornameKeyword_3());
    }
(
(
		lv_vorname_4_0=RULE_STRING
		{
			newLeafNode(lv_vorname_4_0, grammarAccess.getProfessorAccess().getVornameSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProfessorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"vorname",
        		lv_vorname_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='Nachname' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProfessorAccess().getNachnameKeyword_5());
    }
(
(
		lv_nachname_6_0=RULE_STRING
		{
			newLeafNode(lv_nachname_6_0, grammarAccess.getProfessorAccess().getNachnameSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProfessorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nachname",
        		lv_nachname_6_0, 
        		"STRING");
	    }

)
)	otherlv_7='Vorlesung' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProfessorAccess().getVorlesungKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProfessorRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getProfessorAccess().getVorlesungVorlesungCrossReference_8_0()); 
	}

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getProfessorAccess().getCommaKeyword_9_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProfessorRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getProfessorAccess().getVorlesungVorlesungCrossReference_9_1_0()); 
	}

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getProfessorAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleLehrbeauftrager
entryRuleLehrbeauftrager returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLehrbeauftragerRule()); }
	 iv_ruleLehrbeauftrager=ruleLehrbeauftrager 
	 { $current=$iv_ruleLehrbeauftrager.current; } 
	 EOF 
;

// Rule Lehrbeauftrager
ruleLehrbeauftrager returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLehrbeauftragerAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='PersonalNr' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLehrbeauftragerAccess().getPersonalNrKeyword_1());
    }
(
(
		lv_personalnr_2_0=RULE_STRING
		{
			newLeafNode(lv_personalnr_2_0, grammarAccess.getLehrbeauftragerAccess().getPersonalnrSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLehrbeauftragerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"personalnr",
        		lv_personalnr_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='Vorname' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLehrbeauftragerAccess().getVornameKeyword_3());
    }
(
(
		lv_vorname_4_0=RULE_STRING
		{
			newLeafNode(lv_vorname_4_0, grammarAccess.getLehrbeauftragerAccess().getVornameSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLehrbeauftragerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"vorname",
        		lv_vorname_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='Nachname' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLehrbeauftragerAccess().getNachnameKeyword_5());
    }
(
(
		lv_nachname_6_0=RULE_STRING
		{
			newLeafNode(lv_nachname_6_0, grammarAccess.getLehrbeauftragerAccess().getNachnameSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLehrbeauftragerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nachname",
        		lv_nachname_6_0, 
        		"STRING");
	    }

)
)	otherlv_7='Vorlesung' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLehrbeauftragerAccess().getVorlesungKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLehrbeauftragerRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getLehrbeauftragerAccess().getVorlesungVorlesungCrossReference_8_0()); 
	}

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLehrbeauftragerAccess().getCommaKeyword_9_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLehrbeauftragerRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getLehrbeauftragerAccess().getVorlesungVorlesungCrossReference_9_1_0()); 
	}

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getLehrbeauftragerAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleEvaluation
entryRuleEvaluation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEvaluationRule()); }
	 iv_ruleEvaluation=ruleEvaluation 
	 { $current=$iv_ruleEvaluation.current; } 
	 EOF 
;

// Rule Evaluation
ruleEvaluation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEvaluationAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='Gesamtnote' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEvaluationAccess().getGesamtnoteKeyword_1());
    }
(
(
		lv_gesamtnote_2_0=RULE_INT
		{
			newLeafNode(lv_gesamtnote_2_0, grammarAccess.getEvaluationAccess().getGesamtnoteINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEvaluationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"gesamtnote",
        		lv_gesamtnote_2_0, 
        		"INT");
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEvaluationAccess().getRightCurlyBracketKeyword_3());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


