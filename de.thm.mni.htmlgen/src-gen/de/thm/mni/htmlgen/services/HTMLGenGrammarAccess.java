/*
 * generated by Xtext
 */
package de.thm.mni.htmlgen.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class HTMLGenGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cFormKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cModelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModelFormParserRuleCall_3_0 = (RuleCall)cModelAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFormAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cFormFormParserRuleCall_4_1_0 = (RuleCall)cFormAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Model:
		//	"Model" "{" "Form" model+=Form ("," form+=Form)* "}";
		@Override public ParserRule getRule() { return rule; }

		//"Model" "{" "Form" model+=Form ("," form+=Form)* "}"
		public Group getGroup() { return cGroup; }

		//"Model"
		public Keyword getModelKeyword_0() { return cModelKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Form"
		public Keyword getFormKeyword_2() { return cFormKeyword_2; }

		//model+=Form
		public Assignment getModelAssignment_3() { return cModelAssignment_3; }

		//Form
		public RuleCall getModelFormParserRuleCall_3_0() { return cModelFormParserRuleCall_3_0; }

		//("," form+=Form)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//form+=Form
		public Assignment getFormAssignment_4_1() { return cFormAssignment_4_1; }

		//Form
		public RuleCall getFormFormParserRuleCall_4_1_0() { return cFormFormParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class FormElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Form");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cDescriptionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDescriptionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_0 = (RuleCall)cDescriptionAssignment_4.eContents().get(0);
		private final Keyword cTitleKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTitleAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTitleSTRINGTerminalRuleCall_6_0 = (RuleCall)cTitleAssignment_6.eContents().get(0);
		private final Keyword cFieldKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cFormAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cFormFieldParserRuleCall_8_0 = (RuleCall)cFormAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cFormAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cFormFieldParserRuleCall_9_1_0 = (RuleCall)cFormAssignment_9_1.eContents().get(0);
		
		//Form:
		//	"{" "Name" name=STRING "Description" description=STRING "Title" title=STRING "Field" form+=Field ("," form+=Field)*;
		@Override public ParserRule getRule() { return rule; }

		//"{" "Name" name=STRING "Description" description=STRING "Title" title=STRING "Field" form+=Field ("," form+=Field)*
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"Name"
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//"Description"
		public Keyword getDescriptionKeyword_3() { return cDescriptionKeyword_3; }

		//description=STRING
		public Assignment getDescriptionAssignment_4() { return cDescriptionAssignment_4; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_0() { return cDescriptionSTRINGTerminalRuleCall_4_0; }

		//"Title"
		public Keyword getTitleKeyword_5() { return cTitleKeyword_5; }

		//title=STRING
		public Assignment getTitleAssignment_6() { return cTitleAssignment_6; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_6_0() { return cTitleSTRINGTerminalRuleCall_6_0; }

		//"Field"
		public Keyword getFieldKeyword_7() { return cFieldKeyword_7; }

		//form+=Field
		public Assignment getFormAssignment_8() { return cFormAssignment_8; }

		//Field
		public RuleCall getFormFieldParserRuleCall_8_0() { return cFormFieldParserRuleCall_8_0; }

		//("," form+=Field)*
		public Group getGroup_9() { return cGroup_9; }

		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }

		//form+=Field
		public Assignment getFormAssignment_9_1() { return cFormAssignment_9_1; }

		//Field
		public RuleCall getFormFieldParserRuleCall_9_1_0() { return cFormFieldParserRuleCall_9_1_0; }
	}

	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Field");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cNameKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_0_2_0 = (RuleCall)cNameAssignment_0_2.eContents().get(0);
		private final Keyword cLabelKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cLabelAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cLabelSTRINGTerminalRuleCall_0_4_0 = (RuleCall)cLabelAssignment_0_4.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cTextFieldParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//Field:
		//	"{" "Name" name=ID "Label" label=STRING | TextField "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" "Name" name=ID "Label" label=STRING | TextField "}"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"{" "Name" name=ID "Label" label=STRING
		public Group getGroup_0() { return cGroup_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_0() { return cLeftCurlyBracketKeyword_0_0; }

		//"Name"
		public Keyword getNameKeyword_0_1() { return cNameKeyword_0_1; }

		//name=ID
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_2_0() { return cNameIDTerminalRuleCall_0_2_0; }

		//"Label"
		public Keyword getLabelKeyword_0_3() { return cLabelKeyword_0_3; }

		//label=STRING
		public Assignment getLabelAssignment_0_4() { return cLabelAssignment_0_4; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_0_4_0() { return cLabelSTRINGTerminalRuleCall_0_4_0; }

		//TextField "}"
		public Group getGroup_1() { return cGroup_1; }

		//TextField
		public RuleCall getTextFieldParserRuleCall_1_0() { return cTextFieldParserRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_1() { return cRightCurlyBracketKeyword_1_1; }
	}

	public class TextFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cTextFieldKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cNameKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cNameAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_0_3_0 = (RuleCall)cNameAssignment_0_3.eContents().get(0);
		private final Keyword cLabelKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Assignment cLabelAssignment_0_5 = (Assignment)cGroup_0.eContents().get(5);
		private final RuleCall cLabelSTRINGTerminalRuleCall_0_5_0 = (RuleCall)cLabelAssignment_0_5.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cMultilineFieldParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//TextField:
		//	"TextField" "{" "Name" name=ID "Label" label=STRING | MultilineField "}";
		@Override public ParserRule getRule() { return rule; }

		//"TextField" "{" "Name" name=ID "Label" label=STRING | MultilineField "}"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"TextField" "{" "Name" name=ID "Label" label=STRING
		public Group getGroup_0() { return cGroup_0; }

		//"TextField"
		public Keyword getTextFieldKeyword_0_0() { return cTextFieldKeyword_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_1() { return cLeftCurlyBracketKeyword_0_1; }

		//"Name"
		public Keyword getNameKeyword_0_2() { return cNameKeyword_0_2; }

		//name=ID
		public Assignment getNameAssignment_0_3() { return cNameAssignment_0_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_3_0() { return cNameIDTerminalRuleCall_0_3_0; }

		//"Label"
		public Keyword getLabelKeyword_0_4() { return cLabelKeyword_0_4; }

		//label=STRING
		public Assignment getLabelAssignment_0_5() { return cLabelAssignment_0_5; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_0_5_0() { return cLabelSTRINGTerminalRuleCall_0_5_0; }

		//MultilineField "}"
		public Group getGroup_1() { return cGroup_1; }

		//MultilineField
		public RuleCall getMultilineFieldParserRuleCall_1_0() { return cMultilineFieldParserRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_1() { return cRightCurlyBracketKeyword_1_1; }
	}

	public class MultilineFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultilineField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMultilineFieldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLabelKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLabelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLabelIDTerminalRuleCall_5_0 = (RuleCall)cLabelAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MultilineField:
		//	"MultilineField" "{" "Name" name=ID "Label" label=ID "}";
		@Override public ParserRule getRule() { return rule; }

		//"MultilineField" "{" "Name" name=ID "Label" label=ID "}"
		public Group getGroup() { return cGroup; }

		//"MultilineField"
		public Keyword getMultilineFieldKeyword_0() { return cMultilineFieldKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Name"
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"Label"
		public Keyword getLabelKeyword_4() { return cLabelKeyword_4; }

		//label=ID
		public Assignment getLabelAssignment_5() { return cLabelAssignment_5; }

		//ID
		public RuleCall getLabelIDTerminalRuleCall_5_0() { return cLabelIDTerminalRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	private final ModelElements pModel;
	private final FormElements pForm;
	private final FieldElements pField;
	private final TextFieldElements pTextField;
	private final MultilineFieldElements pMultilineField;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public HTMLGenGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pForm = new FormElements();
		this.pField = new FieldElements();
		this.pTextField = new TextFieldElements();
		this.pMultilineField = new MultilineFieldElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.thm.mni.htmlgen.HTMLGen".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	"Model" "{" "Form" model+=Form ("," form+=Form)* "}";
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Form:
	//	"{" "Name" name=STRING "Description" description=STRING "Title" title=STRING "Field" form+=Field ("," form+=Field)*;
	public FormElements getFormAccess() {
		return pForm;
	}
	
	public ParserRule getFormRule() {
		return getFormAccess().getRule();
	}

	//Field:
	//	"{" "Name" name=ID "Label" label=STRING | TextField "}";
	public FieldElements getFieldAccess() {
		return pField;
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}

	//TextField:
	//	"TextField" "{" "Name" name=ID "Label" label=STRING | MultilineField "}";
	public TextFieldElements getTextFieldAccess() {
		return pTextField;
	}
	
	public ParserRule getTextFieldRule() {
		return getTextFieldAccess().getRule();
	}

	//MultilineField:
	//	"MultilineField" "{" "Name" name=ID "Label" label=ID "}";
	public MultilineFieldElements getMultilineFieldAccess() {
		return pMultilineField;
	}
	
	public ParserRule getMultilineFieldRule() {
		return getMultilineFieldAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
