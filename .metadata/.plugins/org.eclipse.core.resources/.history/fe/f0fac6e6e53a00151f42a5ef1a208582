/*
 * 
 */
package hochschuleemf.diagram.providers;

import java.util.HashSet;
import java.util.IdentityHashMap;
import java.util.Map;
import java.util.Set;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.emf.ecore.ENamedElement;
import org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;
import org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages;
import org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.swt.graphics.Image;

import hochschuleemf.HochschuleemfPackage;
import hochschuleemf.diagram.edit.parts.FachbereichEditPart;
import hochschuleemf.diagram.edit.parts.FachbereichStudiengangEditPart;
import hochschuleemf.diagram.edit.parts.HochschuleEditPart;
import hochschuleemf.diagram.edit.parts.HochschuleFachbereichEditPart;
import hochschuleemf.diagram.edit.parts.StudiengangEditPart;
import hochschuleemf.diagram.part.HochschuleemfDiagramEditorPlugin;

/**
 * @generated
 */
public class HochschuleemfElementTypes {

	/**
	* @generated
	*/
	private HochschuleemfElementTypes() {
	}

	/**
	* @generated
	*/
	private static Map<IElementType, ENamedElement> elements;

	/**
	* @generated
	*/
	private static DiagramElementTypeImages elementTypeImages = new DiagramElementTypeImages(
			HochschuleemfDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());

	/**
	* @generated
	*/
	private static Set<IElementType> KNOWN_ELEMENT_TYPES;

	/**
	* @generated
	*/
	public static final IElementType Hochschule_1000 = getElementType("HochschuleEMF.diagram.Hochschule_1000"); //$NON-NLS-1$
	/**
	* @generated
	*/
	public static final IElementType Fachbereich_2001 = getElementType("HochschuleEMF.diagram.Fachbereich_2001"); //$NON-NLS-1$
	/**
	* @generated
	*/
	public static final IElementType Studiengang_3001 = getElementType("HochschuleEMF.diagram.Studiengang_3001"); //$NON-NLS-1$
	/**
	* @generated
	*/
	public static final IElementType HochschuleFachbereich_4001 = getElementType(
			"HochschuleEMF.diagram.HochschuleFachbereich_4001"); //$NON-NLS-1$
	/**
	* @generated
	*/
	public static final IElementType FachbereichStudiengang_4002 = getElementType(
			"HochschuleEMF.diagram.FachbereichStudiengang_4002"); //$NON-NLS-1$

	/**
	* @generated
	*/
	public static ImageDescriptor getImageDescriptor(ENamedElement element) {
		return elementTypeImages.getImageDescriptor(element);
	}

	/**
	* @generated
	*/
	public static Image getImage(ENamedElement element) {
		return elementTypeImages.getImage(element);
	}

	/**
	* @generated
	*/
	public static ImageDescriptor getImageDescriptor(IAdaptable hint) {
		return getImageDescriptor(getElement(hint));
	}

	/**
	* @generated
	*/
	public static Image getImage(IAdaptable hint) {
		return getImage(getElement(hint));
	}

	/**
	* Returns 'type' of the ecore object associated with the hint.
	* 
	* @generated
	*/
	public static ENamedElement getElement(IAdaptable hint) {
		Object type = hint.getAdapter(IElementType.class);
		if (elements == null) {
			elements = new IdentityHashMap<IElementType, ENamedElement>();

			elements.put(Hochschule_1000, HochschuleemfPackage.eINSTANCE.getHochschule());

			elements.put(Fachbereich_2001, HochschuleemfPackage.eINSTANCE.getFachbereich());

			elements.put(Studiengang_3001, HochschuleemfPackage.eINSTANCE.getStudiengang());

			elements.put(HochschuleFachbereich_4001, HochschuleemfPackage.eINSTANCE.getHochschule_Fachbereich());

			elements.put(FachbereichStudiengang_4002, HochschuleemfPackage.eINSTANCE.getFachbereich_Studiengang());
		}
		return (ENamedElement) elements.get(type);
	}

	/**
	* @generated
	*/
	private static IElementType getElementType(String id) {
		return ElementTypeRegistry.getInstance().getType(id);
	}

	/**
	* @generated
	*/
	public static boolean isKnownElementType(IElementType elementType) {
		if (KNOWN_ELEMENT_TYPES == null) {
			KNOWN_ELEMENT_TYPES = new HashSet<IElementType>();
			KNOWN_ELEMENT_TYPES.add(Hochschule_1000);
			KNOWN_ELEMENT_TYPES.add(Fachbereich_2001);
			KNOWN_ELEMENT_TYPES.add(Studiengang_3001);
			KNOWN_ELEMENT_TYPES.add(HochschuleFachbereich_4001);
			KNOWN_ELEMENT_TYPES.add(FachbereichStudiengang_4002);
		}
		return KNOWN_ELEMENT_TYPES.contains(elementType);
	}

	/**
	* @generated
	*/
	public static IElementType getElementType(int visualID) {
		switch (visualID) {
		case HochschuleEditPart.VISUAL_ID:
			return Hochschule_1000;
		case FachbereichEditPart.VISUAL_ID:
			return Fachbereich_2001;
		case StudiengangEditPart.VISUAL_ID:
			return Studiengang_3001;
		case HochschuleFachbereichEditPart.VISUAL_ID:
			return HochschuleFachbereich_4001;
		case FachbereichStudiengangEditPart.VISUAL_ID:
			return FachbereichStudiengang_4002;
		}
		return null;
	}

	/**
	* @generated
	*/
	public static final DiagramElementTypes TYPED_INSTANCE = new DiagramElementTypes(elementTypeImages) {

		/**
		* @generated
		*/
		@Override

		public boolean isKnownElementType(IElementType elementType) {
			return hochschuleemf.diagram.providers.HochschuleemfElementTypes.isKnownElementType(elementType);
		}

		/**
		* @generated
		*/
		@Override

		public IElementType getElementTypeForVisualId(int visualID) {
			return hochschuleemf.diagram.providers.HochschuleemfElementTypes.getElementType(visualID);
		}

		/**
		* @generated
		*/
		@Override

		public ENamedElement getDefiningNamedElement(IAdaptable elementTypeAdapter) {
			return hochschuleemf.diagram.providers.HochschuleemfElementTypes.getElement(elementTypeAdapter);
		}
	};

}
