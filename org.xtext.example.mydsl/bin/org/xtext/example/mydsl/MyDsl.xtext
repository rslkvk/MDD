// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

//import "http://www.example.org/hochschule" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate myDsl "http://www.thm.de/mni/hochschule/mydsl2/MyDsl2"

Hochschule returns Hochschule:
	'Hochschule'
	'{'
		('Name' Name=EString)?
		'fachbereich' '{' fachbereich+=Fachbereich ( "," fachbereich+=Fachbereich)* '}' 
		'student' '{' student+=Student ( "," student+=Student)* '}' 
	'}';





Dozent returns Dozent:
	Dozent_Impl | Lehrbeauftragter | Professor;


Fachbereich returns Fachbereich:
	'Fachbereich'
	'{'
		('Name' Name=EString)?
		('Alias' Alias=EString)?
		('vorlesung' '(' vorlesung+=[Vorlesung|EString] ( "," vorlesung+=[Vorlesung|EString])* ')' )?
		'studiengang' '{' studiengang+=Studiengang ( "," studiengang+=Studiengang)* '}' 
		'dozent' '{' dozent+=Dozent ( "," dozent+=Dozent)* '}' 
	'}';

EString returns ecore::EString:
	STRING | ID;

Student returns Student:
	{Student}
	'Student'
	MatrikelNr=EString
	'{'
		('Vorname' Vorname=EString)?
		('Nachname' Nachname=EString)?
		('vorlesung' '(' vorlesung+=[Vorlesung|EString] ( "," vorlesung+=[Vorlesung|EString])* ')' )?
	'}';

Studiengang returns Studiengang:
	'Studiengang'
	'{'
		('Name' Name=EString)?
		('NC' NC=EString)?
		'student' '(' student+=[Student|EString] ( "," student+=[Student|EString])* ')' 
		'vorlesung' '{' vorlesung+=Vorlesung ( "," vorlesung+=Vorlesung)* '}' 
	'}';

Vorlesung returns Vorlesung:
	'Vorlesung'
	'{'
		('Name' Name=EString)?
		('ModulNr' ModulNr=EString)?
		('Beschreibung' Beschreibung=EString)?
		('CrP' CrP=EString)?
		'tutor' '(' tutor+=[Student|EString] ( "," tutor+=[Student|EString])* ')' 
		'dozent' dozent=[Dozent|EString]
		'student' '(' student+=[Student|EString] ( "," student+=[Student|EString])* ')' 
		'evaluation' '{' evaluation+=Evaluation ( "," evaluation+=Evaluation)* '}' 
	'}';

Dozent_Impl returns Dozent:
	'Dozent'
	PersonalNr=EString
	'{'
		('Vorname' Vorname=EString)?
		('Nachname' Nachname=EString)?
		'vorlesung' '(' vorlesung+=[Vorlesung|EString] ( "," vorlesung+=[Vorlesung|EString])* ')' 
	'}';

Evaluation returns Evaluation:
	{Evaluation}
	'Evaluation'
	'{'
		('Gesamtnote' Gesamtnote=EInt)?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

Lehrbeauftragter returns Lehrbeauftragter:
	'Lehrbeauftragter'
	PersonalNr=EString
	'{'
		('Vorname' Vorname=EString)?
		('Nachname' Nachname=EString)?
		'vorlesung' '(' vorlesung+=[Vorlesung|EString] ( "," vorlesung+=[Vorlesung|EString])* ')' 
	'}';

Professor returns Professor:
	'Professor'
	PersonalNr=EString
	'{'
		('Vorname' Vorname=EString)?
		('Nachname' Nachname=EString)?
		'vorlesung' '(' vorlesung+=[Vorlesung|EString] ( "," vorlesung+=[Vorlesung|EString])* ')' 
	'}';
